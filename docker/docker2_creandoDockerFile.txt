siempre se crea de la forma Dockerfile
buscar una imagen que ya tenga instalado lo que usaremos

la primera linea siempre va a ser un FROM

ejemplo 
FROM Ubuntu

la siguiente indica el directorio donde se trabaja y lo crea
WORKDIR /app
esta copia 
COPY . .
-esta hace que se ejecute la aplicacion de node
RUN yarn install --production

y esta hace que inicie el index.js
CMD ["node", "/app/src/index.js"]


construir la imagen
docker build -t "el tag" .

correr la imagen 
docker run "nombre de la imagen"

no se podra ir a la app ya que esta corriendo dentro de docker
si se quiere acceder se usa

docker run -dp puerto:puerto "tag de la imagen"

lo que hara sera correr un nuevo contenedor pero esta vez expondra
el puerto indicado en el comando

aparte le pasaremos en (d) para que corra en background

si queremos que persistan o que no se borren los datos al parar el contenedor
tendremos que hacer lo siguiente

lo que haremos sera compartirle el directorio donde esta mi  base de datos de mi computadora
a el contenedor

docker run -d -v ~/peladodocke/peladonerd/docker/12/app/etc:/etc/todos -p 3000:3000 getting-started

so la sintaxis seria 

docker run -d -v "ruta de de la base de datos":"ruta bd en el container" -p "el puerto a exponer" "nombre de la imagen"

de esta forma se puede desarrollar usando docker para correr la app y que los cambios se hagan sin tenener que estar reconstrullendo la imagen

sudo docker run -d -v ~/peladodocke/peladonerd/docker/12/app/etc:/etc/todos -p 3000:3000 -v ~/peladodocke/peladonerd/docker/12/app/src:/app/src getting-started

cuando ya terminamos de hacer cambios y vas a dejar el proyecto para segui otro dia
se hace un docker build pero con un nuevo tag

docker buil -t "tag de la imange:v2" .

para compartir la imagen se usa un registro

usare dockerhub 

te creas la cuenta de dockerhub

ahora te logeas con

docker login

ahora ya se puede subir la imagen a dockerhub

[importante tagear la imagen bien] docjkerhub pide que la imagen lleve tu nombre antes
asi que le cambiaremos el tag a la imagen eso lo haremos asi: 

docker tag "id de la imange" "nombre de la imagen" 

ejemplo: docker tag 7250aa2cb7ba ancordss/getting-started:v2


so ahora si vamos a poder subir la imagen de la siguiente forma

docker push "nombre de la imagen"

ejemplo:

docker push ancordss/getting-started:v2

ahora en la pagina de dockerhub aparece la imagen y cualquier persona puede hacer
docker pull "nombre de la imagen" y usarla.
