para fines explicativos reutilicemos el script de la calculadora que generamos en el módulo pasado:


package main
            
import "fmt"
 
func main() {
            suma := Suma(2, 2)
            fmt.Println("El resultado de la suma es: ", suma)
            
            resta := Resta(2, 2)
            fmt.Println("El resultado de la resta es: ", resta)
            
            multiplicacion := Multiplicacion(2, 2)
            fmt.Println("El resultado de la multiplicacion es: ", multiplicacion)
 
            division := Division(2, 2)
            fmt.Println("El resultado de la division es: ", division)
 
            promedio  := Promedio(2, 2, 2, 2, 2)
            fmt.Println("El resultado del promedio es: ", promedio)
}
 
func Suma(numero1, numero2 int) (resultado int) {
            resultado = numero1 + numero2
            return
}
 
func Resta(numero1, numero2 int) (resultado int) {
            resultado = numero1 - numero2
            return
}
 
func Multiplicacion(numero1, numero2 int) (resultado int) {
            resultado = numero1 * numero2
            return
}
 
func Division(numero1, numero2 int) (resultado int) {
            resultado = numero1 / numero2
            return
}
 
func Promedio(numero1, numero2, numero3, numero4, numero5 int) (resultado int) {
            resultado = (numero1 + numero2 + numero3 + numero4 + numero5) / 5
            return
}

    

En esta versión se ha añadido una función para cálculo del promedio que recibe 4 números enteros. De igual manera se agrega la correspondiente prueba unitaria:


package main
 
import "testing"
import "fmt"
            
func TestSuma(t *testing.T) {
            suma := Suma(7, 7)
            if suma != 14 {
                        t.Error("Se esperaba 14 y se obtuvo", suma)
            }
            
            fmt.Println("Prueba de suma exitosa")
}
 
func TestResta(t *testing.T) {
            resta := Resta(7, 7)
            if resta != 0 {
                        t.Error("Se esperaba 0 y se obtuvo", resta)
            }
            
            fmt.Println("Prueba de resta exitosa")
}
 
func TestMultiplicacion(t *testing.T) {
            multiplicacion := Multiplicacion(7, 7)
            if multiplicacion != 49 {
                        t.Error("Se esperaba 49 y se obtuvo", multiplicacion)
            }
            
            fmt.Println("Prueba de multiplicacion exitosa")
}
 
func TestDivision(t *testing.T) {
            division := Division(7, 7)
            if division != 1 {
                        t.Error("Se esperaba 1 y se obtuvo", division)
            }
            
            fmt.Println("Prueba de division exitosa")
}
 
func TestPromedio(t *testing.T) {
            promedio := Promedio(7, 7, 7, 7, 7)
            if promedio != 7 {
                        t.Error("Se esperaba 7 y se obtuvo", promedio)
            }
            
            fmt.Println("Prueba del promedio exitosa")
}

    

Y desarrollemos un archivo de pruebas de integración de acuerdo a las convenciones antes mencionadas.

Nuestro archivo llevará por nombre "calculadora_integration_test.go" y tendrá el siguiente contenido:


// +build integration
 
package main
 
import "testing"
import "fmt"
            
func TestIntegrationCalculadora(t *testing.T) {
            suma := Suma(8, 8)
            resta := Resta(8, 8)     
            multiplicacion := Multiplicacion(8, 8)
            division := Division(8, 8)
            promedio := Promedio(8, 8, 8, 8, 8)
 
            promediototal := Promedio(suma, resta, multiplicacion, division, promedio)
 
            if promediototal != 17 {
                        t.Error("Se esperaba 17 y se obtuvo", promediototal)
            }
            
            fmt.Println("Prueba de integracion del promedio total fue exitosa")
}

    

Siguiendo la convención de los tags, ejecutamos nuestro archivo de pruebas de integración con el siguiente comando:

go test -tags=integration

Lo cual nos presenta el siguiente resultado:


Prueba de integracion del promedio total fue exitosa
Prueba de suma exitosa
Prueba de resta exitosa
Prueba de multiplicacion exitosa
Prueba de division exitosa
Prueba del promedio exitosa
PASS
ok  calculadora   0.533s

    

En el resultado anterior, podemos ver claramente cómo se ejecutan las pruebas de integración y las unitarias.

Finalmente, únicamente requerimos manejar todos nuestros datos de pruebas y configuraciones desde un archivo de configuración. Para ello, nos apoyaremos de un archivo ".env", el cual crearemos con el siguiente contenido:


valor_usar=8
promedio_total=17
    

Ahora modificamos nuestro archivo de pruebas de integración para cargar su configuración desde el archivo ".env" y con apoyo de la librería de terceros "github.com/joho/godotenv", la cual nos provee una implementación para esta funcionalidad.

Lo primero que haremos será cargar la librería de terceros con el siguiente comando:

go get github.com/joho/godotenv

Y posteriormente, incluimos su implementación en nuestro código, quedando de la siguiente manera:


// +build integration
 
package main
 
import "testing"
import "fmt"
import "github.com/joho/godotenv"
import "os"
import "strconv"
            
func TestIntegrationCalculadora(t *testing.T) {
            err := godotenv.Load()
            if err != nil {
            t.Fatalf("could not load .env file: %v", err)
            }
 
            valor_usar, err := strconv.Atoi(os.Getenv("valor_usar"))
            promedio_total, err := strconv.Atoi(os.Getenv("promedio_total"))
 
            suma := Suma(valor_usar, valor_usar)
            resta := Resta(valor_usar, valor_usar)            
            multiplicacion := Multiplicacion(valor_usar, valor_usar)
            division := Division(valor_usar, valor_usar)
            promedio := Promedio(valor_usar, valor_usar, valor_usar, valor_usar, valor_usar)
 
            promediototal := Promedio(suma, resta, multiplicacion, division, promedio)
 
            if promediototal != promedio_total {
                        t.Error("Se esperaba 17 y se obtuvo", promediototal)
            }
            
            fmt.Println("Prueba de integracion del promedio total fue exitosa")
}

    

Finalmente, solo nos resta probar nuestro archivo de pruebas, con el comando siguiente:

go test -tags=integration

El cual nos devuelve el mismo resultado que anteriormente tuvimos:


Prueba de integracion del promedio total fue exitosa
Prueba de suma exitosa
Prueba de resta exitosa
Prueba de multiplicacion exitosa
Prueba de division exitosa
Prueba del promedio exitosa
PASS
ok    calculadora 0.328s
  
